import re

from aiogram import Bot
from aiogram.enums import ContentType
from aiogram.filters import Filter
from aiogram.types import Message
from pymorphy2 import MorphAnalyzer

from src.utils import get_profanity_wordlist

morph = MorphAnalyzer(lang="ru")


class ProfinityFilter(Filter):
    """–§–∏–ª—å—Ç—Ä –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏"""

    async def __call__(self, message: Message, bot: Bot) -> bool:
        profanity_list = await get_profanity_wordlist()
        text = ''

        if message.content_type == ContentType.TEXT:
            text = message.text.lower().strip().split()
        elif message.content_type == ContentType.PHOTO:
            if message.caption:
                text = message.caption.lower().strip().split()

        for word in text:
            word = word.strip(' !,?.\t\n')
            parsed_word = morph.parse(word)[0]
            normal_form = parsed_word.normal_form

            if normal_form in profanity_list:
                await bot.send_message(chat_id=message.from_user.id,
                                       text='ü§¨ –ù–µ —Ä—É–≥–∞–π—Å—è!')
                await message.delete()
                return False
        else:
            return True


class LenMessageFilter(Filter):
    """–§–∏–ª—å—Ç—Ä –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—É—é –¥–ª–∏–Ω—É"""

    def __init__(self):
        self.max_len = 8

    async def __call__(self, message: Message, bot: Bot) -> bool:
        text = ''
        if message.content_type == ContentType.TEXT:
            text = message.text
        elif message.content_type == ContentType.PHOTO:
            if message.caption:
                text = message.caption

        if len(text) < self.max_len:
            return True
        else:
            await bot.send_message(chat_id=message.from_user.id,
                                   text='‚ö†Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—É—é –Ω–æ—Ä–º—É (800) ‚ö†Ô∏è')
            await message.delete()
            return False


class LinksFilter(Filter):
    """–§–∏–ª—å—Ç—Ä –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–æ–∫"""

    def __init__(self):
        # self.pattern = r'(?:https?://|www\.)?\w+\.\w+(?:/\w+)*/?' # –†–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å—Å—ã–ª–∫–∏ –±–µ–∑ (http/https/www)
        self.pattern = r'(?:https?://|www\.)\w+\.\w+(?:/\w+)*/?'

    async def __call__(self, message: Message, bot: Bot) -> bool:
        text = ''
        if message.content_type == ContentType.TEXT:
            text = message.text
        elif message.content_type == ContentType.PHOTO:
            if message.caption:
                text = message.caption

        links_list = re.findall(self.pattern, text, flags=re.IGNORECASE)

        if links_list:
            await bot.send_message(chat_id=message.from_user.id,
                                   text='‚ö†Ô∏è –í –≤–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è —Å—Å—ã–ª–∫–∏! ‚ö†Ô∏è')
            await message.delete()
            return False
        else:
            return True
